.data
empty_LS

.text
jal Main
li $v0 10
syscall

Main:
li $a0 8
jal _heapAlloc
move $t0 $v0
bnez $t0 null1
la $a0 _str0
j _error
null1:
move $a0 $t0
li $a1 10

move $t0 $v0
move $a0 $t0
jal _print



LS.Start:
la $t9 $s0
sw $t9 0($sp)
move $s0 $a0
move $t0 $a1
move $a0 $s0
move $a1 $t0

move $a0 $s0

move $a0 9999
jal _print
move $a0 $s0
li $a1 8

move $t0 $v0
move $a0 $t0
jal _print
move $a0 $s0
li $a1 12

move $t0 $v0
move $a0 $t0
jal _print
move $a0 $s0
li $a1 17

move $t0 $v0
move $a0 $t0
jal _print
move $a0 $s0
li $a1 50

move $t0 $v0
move $a0 $t0
jal _print
li $v0 55
lw $s0 0($sp)



LS.Print:
move $t0 $a0
li $t1 1
while1_top:
lw $t2 4($t0)
slti $t2 $t1 $t2
beqz $t2 while1_end
lw $t2 0($t0)
bnez $t2 null2
la $a0 _str0
j _error
null2:
lw $t3 0($t2)
(Lt) UNDEFINED
bnez $t3 bounds1
la $a0 _str0
j _error
bounds1:
mul $t3 $t1 4
addu $t3 $t3 $t2
lw $t3 4($t3)
move $a0 $t3
jal _print
addu $t1 $t1 1
j while1_top
while1_end:
li $v0 0



LS.Search:
move $t0 $a0
move $t1 $a1
li $t2 1
li $t3 0
while2_top:
lw $t4 4($t0)
slti $t4 $t2 $t4
beqz $t4 while2_end
lw $t4 0($t0)
bnez $t4 null3
la $a0 _str0
j _error
null3:
lw $t5 0($t4)
(Lt) UNDEFINED
bnez $t5 bounds2
la $a0 _str0
j _error
bounds2:
mul $t5 $t2 4
addu $t5 $t5 $t4
lw $t5 4($t5)
addu $t4 $t1 1
slti $t6 $t5 $t1
beqz $t6 if1_else
j if1_end
if1_else:
slti $t4 $t5 $t4
bnez $t4 if2_else
j if2_end
if2_else:
li $t3 1
lw $t2 4($t0)
if2_end:
if1_end:
addu $t2 $t2 1
j while2_top
while2_end:
move $v0 $t3



LS.Init:
la $t9 $s0
sw $t9 0($sp)
move $s0 $a0
move $t0 $a1
la $t9 $t0
sw $t9 4($s0)
move $a0 $t0

move $t0 $v0
la $t9 $t0
sw $t9 0($s0)
li $t0 1
lw $t1 4($s0)
addu $t1 $t1 1
while3_top:
lw $t2 4($s0)
slti $t2 $t0 $t2
beqz $t2 while3_end
mul $t2 2 $t0
subu $t3 $t1 3
lw $t4 0($s0)
bnez $t4 null4
la $a0 _str0
j _error
null4:
lw $t5 0($t4)
(Lt) UNDEFINED
bnez $t5 bounds3
la $a0 _str0
j _error
bounds3:
mul $t5 $t0 4
addu $t5 $t5 $t4
addu $t3 $t2 $t3
la $t9 $t3
sw $t9 4($t5)
addu $t0 $t0 1
subu $t1 $t1 1
j while3_top
while3_end:
li $v0 0
lw $s0 0($sp)



AllocArray:
move $t0 $a0
mul $t1 $t0 4
addu $t1 $t1 4
li $a0 $t1
jal _heapAlloc
move $t1 $v0
la $t9 $t0
sw $t9 0($t1)
move $v0 $t1




_print:
li $v0 1
syscall
la $a0 _newline
li $v0 4
syscall
jr $ra

_error:
li $v0 4
syscall
li $v0 10
syscall

_heapAlloc:
li $v0 9
syscall
jr $ra

.data
.align 0
_newline: .asciiz "\n"
_str0: .asciiz "null pointer\n"
